name: iOS Build & Upload

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-ios:
    runs-on: macos-15

    env:
      APP_BUNDLE_ID: com.gearup.app
      TEAM_ID: M282YL56RT
      PROFILE_NAME: GearupAppStore
      KEYCHAIN_NAME: signing_${{ github.run_id }}
      FLUTTER_VERSION: 3.35.5
      XCODE_VERSION: 16.1

    steps:
      # -------------------------------------------------------
      # Checkout repository
      # -------------------------------------------------------
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4

      # -------------------------------------------------------
      # Setup tools
      # -------------------------------------------------------
      - name: üß∞ Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: üê¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          architecture: arm64

      # -------------------------------------------------------
      # Prepare environment
      # -------------------------------------------------------
      - name: üîß Precache Flutter iOS artifacts
        run: |
          set -e
          flutter precache --ios --no-universal --force
          echo "‚úÖ Flutter precache done"

      - name: üßπ Flutter clean & get packages
        run: |
          flutter clean
          flutter pub get

      - name: üç´ Install CocoaPods
        working-directory: ios
        run: |
          pod repo update
          pod install --verbose

      # -------------------------------------------------------
      # Import signing assets
      # -------------------------------------------------------
      - name: üîê Import signing certificates
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERT_P12_BASE64 }}
          p12-password:    ${{ secrets.IOS_CERT_P12_PASSWORD }}
          keychain:        ${{ env.KEYCHAIN_NAME }}
          create-keychain: true

      - name: üóùÔ∏è Make keychain default
        run: security default-keychain -s "${KEYCHAIN_NAME}.keychain"

      - name: üì≤ Download provisioning profile
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id:        ${{ env.APP_BUNDLE_ID }}
          issuer-id:        ${{ secrets.ASC_ISSUER_ID }}
          api-key-id:       ${{ secrets.ASC_KEY_ID }}
          api-private-key:  ${{ secrets.ASC_KEY_P8 }}
          profile-type:     IOS_APP_STORE

      # -------------------------------------------------------
      # Build & archive
      # -------------------------------------------------------
      - name: üèóÔ∏è Build iOS archive
        run: |
          set -euo pipefail
          echo "üìç Xcode version:"
          xcodebuild -version
          echo "üìç Available SDKs:"
          xcodebuild -showsdks

          xcodebuild clean archive \
            -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -sdk iphoneos \
            -configuration Release \
            -destination 'generic/platform=iOS Simulator' \
            -archivePath build/Runner.xcarchive \
            DEVELOPMENT_TEAM=${{ env.TEAM_ID }} \
            PRODUCT_BUNDLE_IDENTIFIER=${{ env.APP_BUNDLE_ID }} \
            CODE_SIGN_STYLE=Manual \
            PROVISIONING_PROFILE_SPECIFIER=${{ env.PROFILE_NAME }}

      # -------------------------------------------------------
      # Export IPA
      # -------------------------------------------------------
      - name: üì¶ Export IPA
        run: |
          set -euo pipefail
          mkdir -p build/export
          cp ios/ci_export_appstore.plist build/ci_export_appstore.plist

          xcodebuild -exportArchive \
            -archivePath build/Runner.xcarchive \
            -exportOptionsPlist build/ci_export_appstore.plist \
            -exportPath build/export
          echo "‚úÖ IPA exported to build/export/Runner.ipa"

      # -------------------------------------------------------
      # Upload to TestFlight
      # -------------------------------------------------------
      - name: ‚òÅÔ∏è Upload to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: build/export/Runner.ipa
          issuer-id: ${{ secrets.ASC_ISSUER_ID }}
          api-key-id: ${{ secrets.ASC_KEY_ID }}
          api-private-key: ${{ secrets.ASC_KEY_P8 }}

      # -------------------------------------------------------
      # Save artifacts for debugging
      # -------------------------------------------------------
      - name: üßæ Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-artifacts
          path: |
            build/Runner.xcarchive
            build/export
