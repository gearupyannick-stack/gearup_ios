name: ios
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  ios:
    runs-on: macos-14
    env:
      APP_BUNDLE_ID: com.gearup.app
      KEYCHAIN_NAME: signing_${{ github.run_id }}
      PROFILE_NAME: GearupAppStore

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Flutter SDK
        uses: actions/cache@v4
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: flutter-stable-3.35.5-arm64

      - name: Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.35.5'
          architecture: arm64

      - name: Ensure Xcode 15 selected
        run: sudo xcode-select -s /Applications/Xcode_15.2.app

      - name: Precache iOS engine & write podhelper/xcconfig
        shell: bash
        run: |
          set -euo pipefail
          flutter precache --ios --no-universal --force
          FLUTTER_BIN="$(which flutter)"
          FLUTTER_ROOT="$(cd "$(dirname "$FLUTTER_BIN")/.." && pwd -P)"
          echo "FLUTTER_ROOT=$FLUTTER_ROOT" >> "$GITHUB_ENV"
          mkdir -p ios/Flutter
          cp "$FLUTTER_ROOT/packages/flutter_tools/bin/podhelper.rb" ios/Flutter/podhelper.rb
          cat > ios/Flutter/Generated.xcconfig <<EOF
          FLUTTER_ROOT=$FLUTTER_ROOT
          FLUTTER_APPLICATION_PATH=$GITHUB_WORKSPACE
          FLUTTER_TARGET=lib/main.dart
          DART_OBFUSCATION=false
          TRACK_WIDGET_CREATION=false
          TREE_SHAKE_ICONS=true
          PACKAGE_CONFIG=.dart_tool/package_config.json
          EOF

      - name: Clean Flutter build
        run: flutter clean

      - name: flutter pub get
        run: flutter pub get

      - name: CocoaPods install
        shell: bash
        run: |
          set -euo pipefail
          pushd ios
          pod repo update
          rm -f Podfile.lock
          pod install
          popd

      - name: Import code signing cert
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERT_P12_BASE64 }}
          p12-password:    ${{ secrets.IOS_CERT_P12_PASSWORD }}
          keychain:        ${{ env.KEYCHAIN_NAME }}
          create-keychain: true

      - name: Make signing keychain default
        shell: bash
        run: |
          security default-keychain -s "${KEYCHAIN_NAME}.keychain"

      - name: Download provisioning profile
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id:        ${{ env.APP_BUNDLE_ID }}
          issuer-id:        ${{ secrets.ASC_ISSUER_ID }}
          api-key-id:       ${{ secrets.ASC_KEY_ID }}
          api-private-key:  ${{ secrets.ASC_KEY_P8 }}
          profile-type:     IOS_APP_STORE

      - name: Show installed signing identities
        run: security find-identity -v -p codesigning "${KEYCHAIN_NAME}.keychain" || true

      - name: Show downloaded provisioning profiles
        run: |
          ls -l ~/Library/MobileDevice/Provisioning\ Profiles
          for f in ~/Library/MobileDevice/Provisioning\ Profiles/*.mobileprovision; do
            echo "== $f ==" 
            /usr/libexec/PlistBuddy -c 'Print :Name' /dev/stdin <<<"$(/usr/bin/security cms -D -i "$f")"
            /usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<<"$(/usr/bin/security cms -D -i "$f")"
            /usr/libexec/PlistBuddy -c 'Print :TeamIdentifier:0' /dev/stdin <<<"$(/usr/bin/security cms -D -i "$f")"
            /usr/libexec/PlistBuddy -c 'Print :Entitlements:application-identifier' /dev/stdin <<<"$(/usr/bin/security cms -D -i "$f")"
          done

      - name: Create ExportOptions.plist
        run: |
          cat > ios/ci_export_appstore.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>teamID</key><string>M282YL56RT</string>
            <key>signingStyle</key><string>manual</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>com.gearup.app</key><string>GearupAppStore</string>
            </dict>
            <key>compileBitcode</key><true/>
            <key>uploadBitcode</key><false/>
          </dict>
          </plist>
          PLIST

      - name: Force manual signing settings (Release)
        run: |
          cat >> ios/Flutter/Release.xcconfig <<'EOF'
          DEVELOPMENT_TEAM=M282YL56RT
          PRODUCT_BUNDLE_IDENTIFIER=com.gearup.app
          CODE_SIGN_STYLE=Manual
          CODE_SIGN_IDENTITY=Apple Distribution
          PROVISIONING_PROFILE_SPECIFIER=GearupAppStore
          EOF

      - name: Show Xcode signing settings (Release)
        run: |
          xcodebuild -workspace ios/Runner.xcworkspace \
                    -scheme Runner \
                    -configuration Release \
                    -showBuildSettings | egrep 'CODE_SIGN|DEVELOPMENT_TEAM|PRODUCT_BUNDLE_IDENTIFIER|PROVISIONING_PROFILE'

      - name: Build IPA (App Store)
        shell: bash
        run: |
          set -euo pipefail
          INCLUDE_LINE='#include "Pods/Target Support Files/Pods-Runner/Pods-Runner.profile.xcconfig"'
          FILE="ios/Flutter/Release.xcconfig"
          grep -Fq "$INCLUDE_LINE" "$FILE" || echo "$INCLUDE_LINE" >> "$FILE"
          flutter build ipa --release --export-options-plist=ios/ci_export_appstore.plist

      - name: Verify built IPA exists
        run: ls -lh build/ios/ipa

      - name: Upload to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: build/ios/ipa/Runner.ipa
          issuer-id: ${{ secrets.ASC_ISSUER_ID }}
          api-key-id: ${{ secrets.ASC_KEY_ID }}
          api-private-key: ${{ secrets.ASC_KEY_P8 }}