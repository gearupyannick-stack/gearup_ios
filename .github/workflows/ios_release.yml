name: ios
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  ios:
    runs-on: macos-15
    env:
      APP_BUNDLE_ID: com.gearup.app
      TEAM_ID: M282YL56RT
      PROFILE_NAME: GearupAppStore
      KEYCHAIN_NAME: signing_${{ github.run_id }}

    steps:
      - uses: actions/checkout@v4
      - uses: maxim-lobanov/setup-xcode@v1
        with: { xcode-version: '16.1' }
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.35.5'
          architecture: arm64

      - name: Prepare Flutter iOS files
        run: |
          set -euo pipefail
          flutter precache --ios --no-universal --force
          FLUTTER_BIN="$(which flutter)"
          FLUTTER_ROOT="$(cd "$(dirname "$FLUTTER_BIN")/.." && pwd -P)"
          echo "FLUTTER_ROOT=$FLUTTER_ROOT" >> "$GITHUB_ENV"
          mkdir -p ios/Flutter
          cp "$FLUTTER_ROOT/packages/flutter_tools/bin/podhelper.rb" ios/Flutter/podhelper.rb
          cat > ios/Flutter/Generated.xcconfig <<EOF
          FLUTTER_ROOT=$FLUTTER_ROOT
          FLUTTER_APPLICATION_PATH=$GITHUB_WORKSPACE
          FLUTTER_TARGET=lib/main.dart
          DART_OBFUSCATION=false
          TRACK_WIDGET_CREATION=false
          TREE_SHAKE_ICONS=true
          PACKAGE_CONFIG=.dart_tool/package_config.json
          EOF

      - run: flutter clean
      - run: flutter pub get

      - name: Write Podfile & Release.xcconfig
        run: |
          cat > ios/Podfile <<'RUBY'
          # (paste the Podfile from above)
          RUBY

          cat > ios/Flutter/Release.xcconfig <<'EOF'
          # (paste the Release.xcconfig from above)
          EOF

      - name: Install CocoaPods
        working-directory: ios
        run: |
          pod deintegrate || true
          rm -rf Pods Podfile.lock
          pod install --verbose

      - uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERT_P12_BASE64 }}
          p12-password:    ${{ secrets.IOS_CERT_P12_PASSWORD }}
          keychain:        ${{ env.KEYCHAIN_NAME }}
          create-keychain: true

      - name: Make signing keychain default
        run: security default-keychain -s "${KEYCHAIN_NAME}.keychain"

      - uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id:        ${{ env.APP_BUNDLE_ID }}
          issuer-id:        ${{ secrets.ASC_ISSUER_ID }}
          api-key-id:       ${{ secrets.ASC_KEY_ID }}
          api-private-key:  ${{ secrets.ASC_KEY_P8 }}
          profile-type:     IOS_APP_STORE

      - name: Archive (Release, iPhone)
        run: |
          set -euo pipefail
          xcodebuild -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath build/Runner.xcarchive \
            archive

      - name: Export IPA
        run: |
          cat > ios/ci_export_appstore.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0"><dict>
            <key>method</key><string>app-store</string>
            <key>teamID</key><string>M282YL56RT</string>
            <key>signingStyle</key><string>manual</string>
            <key>provisioningProfiles</key><dict>
              <key>com.gearup.app</key><string>GearupAppStore</string>
            </dict>
            <key>compileBitcode</key><true/>
            <key>uploadBitcode</key><false/>
          </dict></plist>
          PLIST

          xcodebuild -exportArchive \
            -archivePath build/Runner.xcarchive \
            -exportPath build/export \
            -exportOptionsPlist ios/ci_export_appstore.plist

      - name: Upload to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: build/export/Runner.ipa
          issuer-id: ${{ secrets.ASC_ISSUER_ID }}
          api-key-id: ${{ secrets.ASC_KEY_ID }}
          api-private-key: ${{ secrets.ASC_KEY_P8 }}
