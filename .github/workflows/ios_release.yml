name: iOS Build & Upload

on:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-15

    env:
      APP_BUNDLE_ID: com.gearup.app
      TEAM_ID: M282YL56RT
      PROFILE_NAME: GearupAppStore            # provisioning profile name in Apple Developer
      KEYCHAIN_NAME: signing_${{ github.run_id }}
      FLUTTER_VERSION: 3.35.5
      XCODE_VERSION: 16.1

    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4

      - name: üß∞ Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.1'

      - name: üê¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          architecture: arm64

      - name: üîß Precache Flutter iOS artifacts
        run: |
          flutter precache --ios --no-universal --force

      - name: üßπ Clean and get dependencies
        run: |
          flutter clean
          flutter pub get

      - name: üç´ Install CocoaPods
        working-directory: ios
        run: |
          pod repo update
          pod install --verbose

      - name: üîê Import signing certificates
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERT_P12_BASE64 }}
          p12-password:    ${{ secrets.IOS_CERT_P12_PASSWORD }}
          keychain:        ${{ env.KEYCHAIN_NAME }}
          create-keychain: true

      - name: üóùÔ∏è Configure keychain and set default
        run: |
          security list-keychains -s "${KEYCHAIN_NAME}.keychain"
          security default-keychain -s "${KEYCHAIN_NAME}.keychain"
          security unlock-keychain -p "${{ secrets.IOS_CERT_P12_PASSWORD }}" "${KEYCHAIN_NAME}.keychain"
          security set-keychain-settings -t 3600 -u "${KEYCHAIN_NAME}.keychain"

      - name: üì≤ Download provisioning profile
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id:        ${{ env.APP_BUNDLE_ID }}
          issuer-id:        ${{ secrets.ASC_ISSUER_ID }}
          api-key-id:       ${{ secrets.ASC_KEY_ID }}
          api-private-key:  ${{ secrets.ASC_KEY_P8 }}
          profile-type:     IOS_APP_STORE

      - name: üß© Verify provisioning entitlements
        run: |
          echo "Checking provisioning profile for Sign In with Apple..."
          security cms -D -i ~/Library/MobileDevice/Provisioning\ Profiles/*.mobileprovision | grep -A5 "com.apple.developer.applesignin" || echo "‚ö†Ô∏è Entitlement not found!"

      - name: üß© Ensure iOS platform installed
        run: |
          sudo xcodebuild -downloadPlatform iOS

      - name: üèóÔ∏è Build iOS archive (final clean version)
        run: |
                set -euo pipefail
                echo "üèóÔ∏è Archiving Runner with correct signing..."
                xcodebuild clean archive \
                  -workspace ios/Runner.xcworkspace \
                  -scheme Runner \
                  -sdk iphoneos \
                  -configuration Release \
                  -archivePath build/Runner.xcarchive \
                  -destination 'generic/platform=iOS' \
                  DEVELOPMENT_TEAM=${{ env.TEAM_ID }} \
                  CODE_SIGN_STYLE=Manual \
                  CODE_SIGN_IDENTITY="Apple Distribution" \
                  "OTHER_CODE_SIGN_FLAGS=--deep" \
                  PRODUCT_BUNDLE_IDENTIFIER=${{ env.APP_BUNDLE_ID }} \
                  IPHONEOS_DEPLOYMENT_TARGET=17.0 \
                  CURRENT_PROJECT_VERSION=${{ github.run_id }} \
                  -allowProvisioningUpdates \
                  -verbose

      - name: üì¶ Create exportOptionsPlist (for App Store export)
        run: |
          mkdir -p build/export
          cat > build/ci_export_appstore.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>app-store-connect</string>
            <key>uploadBitcode</key>
            <false/>
            <key>compileBitcode</key>
            <false/>
            <key>signingStyle</key>
            <string>manual</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>${{ env.APP_BUNDLE_ID }}</key>
              <string>${{ env.PROFILE_NAME }}</string>
            </dict>
          </dict>
          </plist>
          EOF
          echo "Created build/ci_export_appstore.plist"

      - name: üì¶ Export IPA for App Store
        run: |
          set -euo pipefail
          xcodebuild -exportArchive \
            -archivePath build/Runner.xcarchive \
            -exportOptionsPlist build/ci_export_appstore.plist \
            -exportPath build/export
          echo "‚úÖ IPA exported to build/export"

      - name: ‚òÅÔ∏è Upload to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: build/export/car_learning_app.ipa
          issuer-id: ${{ secrets.ASC_ISSUER_ID }}
          api-key-id: ${{ secrets.ASC_KEY_ID }}
          api-private-key: ${{ secrets.ASC_KEY_P8 }}

      - name: üßæ Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-artifacts
          path: |
            build/Runner.xcarchive
            build/export