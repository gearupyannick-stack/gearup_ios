name: ios

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  ios:
    runs-on: macos-15
    env:
      APP_BUNDLE_ID: com.gearup.app
      TEAM_ID: M282YL56RT
      PROFILE_NAME: GearupAppStore
      KEYCHAIN_NAME: signing_${{ github.run_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Flutter (stable 3.35.5 arm64)
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.35.5'
          architecture: arm64

      - name: Select Xcode 16.1 (iOS 18 SDK)
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.1'

      - name: Ensure iOS device platform is installed
        run: |
          set -euxo pipefail
          sudo xcodebuild -downloadPlatform iOS || true
          sudo xcodebuild -runFirstLaunch

      - name: Precache iOS engine + write Generated.xcconfig
        run: |
          set -euo pipefail
          flutter precache --ios --no-universal --force
          FLUTTER_BIN="$(which flutter)"
          FLUTTER_ROOT="$(cd "$(dirname "$FLUTTER_BIN")/.." && pwd -P)"
          echo "FLUTTER_ROOT=$FLUTTER_ROOT" >> "$GITHUB_ENV"
          mkdir -p ios/Flutter
          cp "$FLUTTER_ROOT/packages/flutter_tools/bin/podhelper.rb" ios/Flutter/podhelper.rb
          cat > ios/Flutter/Generated.xcconfig <<EOF
          FLUTTER_ROOT=$FLUTTER_ROOT
          FLUTTER_APPLICATION_PATH=$GITHUB_WORKSPACE
          FLUTTER_TARGET=lib/main.dart
          DART_OBFUSCATION=false
          TRACK_WIDGET_CREATION=false
          TREE_SHAKE_ICONS=true
          PACKAGE_CONFIG=.dart_tool/package_config.json
          EOF

      - name: Clean & pub get
        run: |
          flutter clean
          flutter pub get

      - name: Write minimal Podfile (ASCII, iPhone only)
        working-directory: ios
        run: |
          cat > Podfile <<'RUBY'
          platform :ios, '15.0'

          flutter_root = ENV['FLUTTER_ROOT']
          raise 'FLUTTER_ROOT missing' if flutter_root.nil? || !File.directory?(flutter_root)
          require File.expand_path('Flutter/podhelper.rb', __dir__)

          target 'Runner' do
            use_frameworks! :linkage => :static
            use_modular_headers!
            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
          end

          post_install do |installer|
            installer.pods_project.targets.each do |t|
              t.build_configurations.each do |config|
                config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
                # iPhone only
                config.build_settings['TARGETED_DEVICE_FAMILY'] = '1'
              end
            end
          end
          RUBY

      - name: Write Release.xcconfig (manual signing)
        run: |
          cat > ios/Flutter/Release.xcconfig <<EOF
          #include "Pods/Target Support Files/Pods-Runner/Pods-Runner.profile.xcconfig"

          PRODUCT_BUNDLE_IDENTIFIER=${APP_BUNDLE_ID}
          DEVELOPMENT_TEAM=${TEAM_ID}
          PROVISIONING_PROFILE_SPECIFIER=${PROFILE_NAME}
          CODE_SIGN_STYLE=Manual
          CODE_SIGN_IDENTITY=Apple Distribution

          MARKETING_VERSION=1.0.1
          CURRENT_PROJECT_VERSION=3
          IPHONEOS_DEPLOYMENT_TARGET=15.0
          TARGETED_DEVICE_FAMILY=1
          EOF

      - name: Install CocoaPods
        working-directory: ios
        run: |
          pod deintegrate || true
          rm -rf Pods Podfile.lock
          pod install --verbose

      - name: Import signing cert
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERT_P12_BASE64 }}
          p12-password:    ${{ secrets.IOS_CERT_P12_PASSWORD }}
          keychain:        ${{ env.KEYCHAIN_NAME }}
          create-keychain: true

      - name: Make signing keychain default
        run: security default-keychain -s "${KEYCHAIN_NAME}.keychain"

      - name: Download provisioning profile (App Store)
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id:        ${{ env.APP_BUNDLE_ID }}
          issuer-id:        ${{ secrets.ASC_ISSUER_ID }}
          api-key-id:       ${{ secrets.ASC_KEY_ID }}
          api-private-key:  ${{ secrets.ASC_KEY_P8 }}
          profile-type:     IOS_APP_STORE

      - name: ExportOptions.plist
        run: |
          cat > ios/ci_export_appstore.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>teamID</key><string>M282YL56RT</string>
            <key>signingStyle</key><string>manual</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>com.gearup.app</key><string>GearupAppStore</string>
            </dict>
            <key>compileBitcode</key><true/>
            <key>uploadBitcode</key><false/>
          </dict>
          </plist>
          PLIST

      - name: Archive (Release, iPhone)
        run: |
          set -euo pipefail
          xcodebuild -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath build/Runner.xcarchive \
            DEVELOPMENT_TEAM=${TEAM_ID} \
            PRODUCT_BUNDLE_IDENTIFIER=${APP_BUNDLE_ID} \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            PROVISIONING_PROFILE_SPECIFIER="${PROFILE_NAME}" \
            IPHONEOS_DEPLOYMENT_TARGET=15.0 \
            archive | xcpretty && exit ${PIPESTATUS[0]}

      - name: Export IPA
        run: |
          set -euo pipefail
          xcodebuild -exportArchive \
            -archivePath build/Runner.xcarchive \
            -exportPath build/export \
            -exportOptionsPlist ios/ci_export_appstore.plist | xcpretty && exit ${PIPESTATUS[0]}
          ls -la build/export

      - name: Upload to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: build/export/Runner.ipa
          issuer-id: ${{ secrets.ASC_ISSUER_ID }}
          api-key-id: ${{ secrets.ASC_KEY_ID }}
          api-private-key: ${{ secrets.ASC_KEY_P8 }}