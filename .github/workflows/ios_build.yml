name: build-and-upload-ios
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  ios:
    runs-on: macos-14
    env:
      APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}
      TEAM_ID: ${{ secrets.TEAM_ID }}
      CERT_P12_BASE64: ${{ secrets.CERT_P12_BASE64 }}
      CERT_P12_PASSWORD: ${{ secrets.CERT_P12_PASSWORD }}
      PROV_PROFILE_BASE64: ${{ secrets.PROV_PROFILE_BASE64 }}
      APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
      APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
      APP_STORE_CONNECT_API_KEY_P8: ${{ secrets.APP_STORE_CONNECT_API_KEY_P8 }}

    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.35.5"

      - run: flutter pub get

      - run: |
          sw_vers
          xcodebuild -version

      - name: Install CocoaPods
        working-directory: ios
        run: pod install --repo-update

      # >>> this was missing <<<
      - name: Decode signing files
        run: |
          mkdir -p $HOME/certs
          echo "$CERT_P12_BASE64" | base64 --decode > $HOME/certs/dist.p12
          echo "$PROV_PROFILE_BASE64" | base64 --decode > $HOME/certs/profile.mobileprovision
          echo "$APP_STORE_CONNECT_API_KEY_P8" | base64 --decode > $HOME/certs/AuthKey.p8
          ls -lah $HOME/certs

      - name: Verify PKCS12 password
        run: |
          set +e
          openssl pkcs12 -in $HOME/certs/dist.p12 -noout -info -passin pass:"$CERT_P12_PASSWORD"
          STATUS=$?
          set -e
          if [ $STATUS -ne 0 ]; then
            echo "❌ PKCS12 verification failed. Check CERT_P12_PASSWORD/BASE64."
            exit 1
          fi
          echo "✅ PKCS12 password OK."

      - name: Configure keychain & certificate
        run: |
          KEYCHAIN=$HOME/Library/Keychains/build.keychain-db
          security create-keychain -p "" build.keychain
          security set-keychain-settings -lut 21600 build.keychain
          security unlock-keychain -p "" build.keychain
          security import $HOME/certs/dist.p12 -k build.keychain -P "${CERT_P12_PASSWORD}" -A -t cert -f pkcs12
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
          security list-keychain -d user -s build.keychain login.keychain-db
          security find-identity -v -p codesigning build.keychain || true

      - name: Install provisioning profile
        run: |
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          PROFILE_UUID=$(/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< "$(security cms -D -i $HOME/certs/profile.mobileprovision)")
          cp "$HOME/certs/profile.mobileprovision" "$HOME/Library/MobileDevice/Provisioning Profiles/$PROFILE_UUID.mobileprovision"
          echo "Installed provisioning profile: $PROFILE_UUID"

      - name: Build iOS archive
        run: |
          rm -rf build/ios
          cd ios
          xcodebuild \
            -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -archivePath "$GITHUB_WORKSPACE/build/ios/Runner.xcarchive" \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            PRODUCT_BUNDLE_IDENTIFIER="$APP_BUNDLE_ID" \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            archive | xcpretty && exit ${PIPESTATUS[0]}

      - name: Create exportOptions.plist
        run: |
          cat > $GITHUB_WORKSPACE/exportOptions.plist << 'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>compileBitcode</key><false/>
            <key>destination</key><string>export</string>
            <key>method</key><string>app-store</string>
            <key>manageAppVersionAndBuildNumber</key><false/>
            <key>signingStyle</key><string>manual</string>
            <key>stripSwiftSymbols</key><true/>
            <key>teamID</key><string>${TEAM_ID}</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>${APP_BUNDLE_ID}</key><string>GearupAppStore</string>
            </dict>
          </dict>
          </plist>
          PLIST

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath "$GITHUB_WORKSPACE/build/ios/Runner.xcarchive" \
            -exportPath "$GITHUB_WORKSPACE/build/ios" \
            -exportOptionsPlist "$GITHUB_WORKSPACE/exportOptions.plist" | xcpretty && exit ${PIPESTATUS[0]}
          ls -lah "$GITHUB_WORKSPACE/build/ios"

      - name: Upload to TestFlight (iTMSTransporter)
        run: |
          IPA="$GITHUB_WORKSPACE/build/ios/Runner.ipa"
          if [ ! -f "$IPA" ]; then
            echo "Runner.ipa not found!"
            exit 1
          fi
          xcrun iTMSTransporter -m upload \
            -apiKey "$APP_STORE_CONNECT_API_KEY_ID" \
            -apiIssuer "$APP_STORE_CONNECT_API_ISSUER_ID" \
            -assetFile "$IPA" \
            -verbose