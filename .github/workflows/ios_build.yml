name: build-ios

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  ios:
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # âœ… Correct action to select Xcode
      - name: Select Xcode 15.4
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.4'

      - name: Show Xcode & SDKs
        run: |
          xcodebuild -version
          xcodebuild -showsdks

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter version
        run: flutter --version

      - name: Get packages
        run: flutter pub get

      - name: Install CocoaPods
        run: gem install cocoapods --no-document

      - name: pod repo update
        working-directory: ios
        run: pod repo update

      # --- Signing (same as you had) ---
      - name: Validate provisioning profile
        shell: bash
        run: |
          set -e
          echo "$PROV_PROFILE_BASE64" | base64 --decode > app.mobileprovision
          /usr/bin/security cms -D -i app.mobileprovision >/dev/null
          echo "Provisioning profile OK ($(stat -f%z app.mobileprovision) bytes)"
        env:
          PROV_PROFILE_BASE64: ${{ secrets.APP_STORE_PROVISIONING_PROFILE_BASE64 }}

      - name: Import cert to keychain
        shell: bash
        run: |
          set -e
          KEYCHAIN_NAME=build.keychain-db
          KEYCHAIN_PASSWORD="${{ secrets.KEYCHAIN_PASSWORD }}"
          echo "${{ secrets.DISTRIBUTION_P12_BASE64 }}" | base64 --decode > dist.p12
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_NAME"
          security import dist.p12 -k "$KEYCHAIN_NAME" -P "${{ secrets.DISTRIBUTION_P12_PASSWORD }}" -T /usr/bin/codesign -T /usr/bin/security
          security list-keychains -d user -s "$KEYCHAIN_NAME" login.keychain-db
          security find-identity -v -p codesigning "$KEYCHAIN_NAME"

      - name: Install provisioning profile
        id: prov
        shell: bash
        run: |
          set -e
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          /usr/bin/security cms -D -i app.mobileprovision > profile.plist
          UUID=$(/usr/libexec/PlistBuddy -c 'Print :UUID' profile.plist)
          NAME=$(/usr/libexec/PlistBuddy -c 'Print :Name' profile.plist)
          cp app.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision
          echo "uuid=$UUID" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "Installed provisioning profile: $NAME ($UUID)"

      - name: Create ExportOptions.plist
        run: |
          cat > ExportOptions.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>signingStyle</key><string>automatic</string>
            <key>stripSwiftSymbols</key><true/>
            <key>uploadBitcode</key><false/>
            <key>compileBitcode</key><false/>
            <key>destination</key><string>export</string>
            <key>teamID</key><string>${{ secrets.APPLE_TEAM_ID }}</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>${{ secrets.APP_BUNDLE_ID }}</key><string>${{ steps.prov.outputs.name }}</string>
            </dict>
          </dict>
          </plist>
          PLIST

      # --- Build & export with Xcode 15.4 / iOS 17.5 SDK ---
      - name: Archive (xcodebuild)
        run: |
          set -e
          xcodebuild -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath build/ios/archive/Runner.xcarchive \
            clean archive

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath build/ios/archive/Runner.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath build/ios/ipa

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: Gearup-IPA
          path: build/ios/ipa/*.ipa