name: build-ios

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  ios:
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 15.4
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.4'

      - name: Show Xcode & SDKs
        run: |
          xcodebuild -version
          xcodebuild -showsdks

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter deps
        run: |
          flutter --version
          flutter pub get

      - name: Install CocoaPods
        run: gem install cocoapods --no-document

      - name: Pod repo update
        working-directory: ios
        run: pod repo update

      # ---------- FAIL FAST IF SECRETS MISSING ----------
      - name: Validate required secrets
        shell: bash
        run: |
          set -euo pipefail
          for v in APP_STORE_PROVISIONING_PROFILE_BASE64 DISTRIBUTION_P12_BASE64 DISTRIBUTION_P12_PASSWORD APPLE_TEAM_ID APP_BUNDLE_ID KEYCHAIN_PASSWORD; do
            if [[ -z "${!v:-}" ]]; then
              echo "::error::Missing required secret: $v"
              exit 1
            fi
          done
          
        env:
          # map old secret names to the new ones the job expects
          APP_STORE_PROVISIONING_PROFILE_BASE64: ${{ secrets.PROV_PROFILE_BASE64 }}
          DISTRIBUTION_P12_BASE64:             ${{ secrets.DISTRIBUTION_P12_BASE64 }}   # or DIST_P12_B64 if thatâ€™s your actual name
          DISTRIBUTION_P12_PASSWORD:           ${{ secrets.CERT_P12_PASSWORD }}
          APPLE_TEAM_ID:                       ${{ secrets.TEAM_ID }}
          APP_BUNDLE_ID:                       ${{ secrets.APP_BUNDLE_ID }}
          KEYCHAIN_PASSWORD:                   ${{ secrets.KEYCHAIN_PASSWORD }}

      - name: Import signing cert to keychain
        shell: bash
        env:
          DISTRIBUTION_P12_BASE64: ${{ secrets.DISTRIBUTION_P12_BASE64 }}
          DISTRIBUTION_P12_PASSWORD: ${{ secrets.DISTRIBUTION_P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          set -euo pipefail
          KEYCHAIN_NAME=build.keychain-db
          echo "$DISTRIBUTION_P12_BASE64" | base64 --decode > dist.p12
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_NAME"
          security import dist.p12 -k "$KEYCHAIN_NAME" -P "$DISTRIBUTION_P12_PASSWORD" -T /usr/bin/codesign -T /usr/bin/security
          security list-keychains -d user -s "$KEYCHAIN_NAME" login.keychain-db
          security find-identity -v -p codesigning "$KEYCHAIN_NAME"

      - name: Install provisioning profile
        id: prov
        shell: bash
        env:
          APP_STORE_PROVISIONING_PROFILE_BASE64: ${{ secrets.APP_STORE_PROVISIONING_PROFILE_BASE64 }}
        run: |
          set -euo pipefail
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$APP_STORE_PROVISIONING_PROFILE_BASE64" | base64 --decode > app.mobileprovision
          /usr/bin/security cms -D -i app.mobileprovision > profile.plist
          UUID=$(/usr/libexec/PlistBuddy -c 'Print :UUID' profile.plist)
          NAME=$(/usr/libexec/PlistBuddy -c 'Print :Name' profile.plist)
          cp app.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision
          echo "uuid=$UUID" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "Installed provisioning profile: $NAME ($UUID)"

      - name: Create ExportOptions.plist
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}
        run: |
          cat > ExportOptions.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>signingStyle</key><string>manual</string>
            <key>stripSwiftSymbols</key><true/>
            <key>uploadBitcode</key><false/>
            <key>compileBitcode</key><false/>
            <key>teamID</key><string>${{ env.APPLE_TEAM_ID }}</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>${{ env.APP_BUNDLE_ID }}</key><string>${{ steps.prov.outputs.name }}</string>
            </dict>
          </dict>
          </plist>
          PLIST

      - name: Archive (xcodebuild)
        run: |
          set -euo pipefail
          xcodebuild -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath build/ios/archive/Runner.xcarchive \
            clean archive

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath build/ios/archive/Runner.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath build/ios/ipa

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: Gearup-IPA
          path: build/ios/ipa/*.ipa
