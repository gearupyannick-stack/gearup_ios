name: Build & Upload iOS App
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: macOS / Xcode
        run: |
          sw_vers
          xcodebuild -version
          xcrun --sdk iphoneos --show-sdk-version

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.35.0'
          cache: true

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Pub get
        run: flutter pub get

      # CocoaPods: pin to a stable version and reset Pods to avoid stale state
      - name: Pin CocoaPods and clear Pods
        run: |
          sudo gem uninstall cocoapods -aIx || true
          sudo gem install cocoapods -v 1.14.3 --no-document
          pod --version
          rm -rf ios/Pods ios/Podfile.lock

      # Sanity check Podfile content (this prints first 80 lines)
      - name: Verify Podfile
        run: |
          test -f ios/Podfile
          ruby -c ios/Podfile
          sed -n '1,80p' ios/Podfile

      # Run pod install explicitly so we fail early with a clear CocoaPods error
      - name: CocoaPods install
        working-directory: ios
        run: |
          pod repo update
          pod install --verbose

      # Build .ipa without signing, with unbuffered Xcode output
      - name: Build IPA (unsigned)
        env:
          NSUnbufferedIO: "YES"
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
        run: |
          set -euo pipefail
          flutter clean
          flutter build ipa --release --no-codesign -v

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: build/ios/ipa/*.ipa

      # Optional: upload to App Store with API key (set secrets first)
      - name: Install Fastlane
        run: brew install fastlane
      - name: Upload to App Store Connect (API key)
        if: ${{ success() && vars.ASC_UPLOAD == '1' }}
        env:
          APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}
          APP_STORE_CONNECT_APP_ID: ${{ secrets.APP_STORE_CONNECT_APP_ID }}
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_BASE64: ${{ secrets.ASC_KEY_BASE64 }}
        run: |
          cd ios
          echo "$ASC_KEY_BASE64" | base64 --decode > AuthKey_${ASC_KEY_ID}.p8
          fastlane deliver \
            --api_key_path AuthKey_${ASC_KEY_ID}.p8 \
            --api_key_id "$ASC_KEY_ID" \
            --api_key_issuer_id "$ASC_ISSUER_ID" \
            --app_identifier "$APP_BUNDLE_ID" \
            --ipa "../build/ios/ipa/Runner.ipa" \
            --skip_screenshots --skip_metadata --force \
            --submit_for_review false
