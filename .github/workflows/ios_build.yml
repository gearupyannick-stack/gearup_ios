name: iOS Signed Build & Upload

on:
  workflow_dispatch:

jobs:
  build-and-upload:
    runs-on: macos-14

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show macOS/Xcode
        run: |
          sw_vers
          xcodebuild -version

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter deps
        run: flutter pub get

      - name: Decode signing assets
        shell: bash
        run: |
          echo "$IOS_CERT_P12_BASE64" | base64 --decode > signing.p12
          echo "$IOS_PROVISION_BASE64" | base64 --decode > app.mobileprovision
          printf "%s" "$APP_STORE_CONNECT_API_KEY" > AuthKey.p8

      - name: Create and unlock keychain
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -lut 21600 build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security list-keychains -s build.keychain

      - name: Import certificate
        run: |
          security import signing.p12 -k build.keychain -P "$IOS_CERT_P12_PASSWORD" -A
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" build.keychain
          security find-identity -v -p codesigning build.keychain

      - name: Install provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          UUID=$(uuidgen)
          cp app.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision

      # Optional: ensure the project uses manual signing and matches your profile/cert.
      # If your Xcode project is already configured for the Distribution cert/profile, this will just work.

      - name: Build signed IPA
        env:
          # Ensure Xcode uses our keychain
          KEYCHAIN_PATH: build.keychain
        run: |
          # Build archive + export via Flutter wrapper
          # If you get export errors, switch to xcodebuild gym or provide an ExportOptions.plist
          flutter build ipa --release

      - name: Upload IPA to TestFlight via App Store Connect API
        env:
          ASC_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
        run: |
          IPAPATH=$(ls -1 build/ios/ipa/*.ipa | head -n1)
          xcrun altool --upload-app \
            --type ios \
            --file "$IPAPATH" \
            --apiKey "$ASC_KEY_ID" \
            --apiIssuer "$ASC_ISSUER_ID"

      - name: Keep artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Signed-IPA
          path: build/ios/ipa/*.ipa
